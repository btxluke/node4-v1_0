{
  "active": false,
  "connections": {
    "Execute Workflow Trigger": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH1": {
      "main": [
        [
          {
            "node": "firstFail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "SSH1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres3": {
      "main": [
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres4": {
      "main": [
        [
          {
            "node": "Postgres5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres5": {
      "main": [
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres6": {
      "main": [
        [
          {
            "node": "Postgres9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "Data Update: Process Alter Statements",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres9": {
      "main": [
        [
          {
            "node": "Postgres10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres10": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "SSH",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH3": {
      "main": [
        [
          {
            "node": "SSH4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH4": {
      "main": [
        [
          {
            "node": "Set1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SSH",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "IF2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Spreadsheet File": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF2": {
      "main": [
        [],
        [
          {
            "node": "Spreadsheet File",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "firstFail": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH": {
      "main": [
        [
          {
            "node": "SSH3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set1": {
      "main": [
        [
          {
            "node": "IF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-07-30T10:44:25.484Z",
  "id": "eDhSzuVhnolE3rwa",
  "name": "Data Update: Silverfish: Prep",
  "nodes": [
    {
      "parameters": {},
      "id": "9a03a28c-3fd4-429a-aca0-583b0644801d",
      "name": "Execute Workflow Trigger",
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1,
      "position": [
        520,
        420
      ]
    },
    {
      "parameters": {
        "command": "psql -d odooData -c \"\\\\COPY upload_silverfish FROM /home/luke/feeds/Upload-Silverfish.csv DELIMITER ',' CSV HEADER;\"",
        "cwd": "/home/luke/feeds/"
      },
      "id": "ba4b6e00-2b98-493e-80b9-b79792b64dee",
      "name": "SSH1",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        1320,
        420
      ],
      "credentials": {
        "sshPassword": {
          "id": "XjhjaSmzbkvtSZ0m",
          "name": "Node3: postgres"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DROP TABLE upload_silverfish;",
        "options": {}
      },
      "id": "bbf7f3dc-b5d9-49da-b94e-fe7b459c7f43",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        880,
        420
      ],
      "credentials": {
        "postgres": {
          "id": "9Jz67Tm0faeykq6p",
          "name": "odoodata"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE odoodata.upload_silverfish AS SELECT * FROM template_silverfish;",
        "options": {}
      },
      "id": "0d95ebf4-183a-41f4-b3aa-255ab8f334d1",
      "name": "Postgres1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        1080,
        420
      ],
      "credentials": {
        "postgres": {
          "id": "9Jz67Tm0faeykq6p",
          "name": "odoodata"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM upload_silverfish WHERE \"Unit Cost\" = 'N/A';",
        "options": {}
      },
      "id": "8e457142-af90-46c2-b12c-00a685612b9d",
      "name": "Postgres2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        880,
        820
      ],
      "credentials": {
        "postgres": {
          "id": "9Jz67Tm0faeykq6p",
          "name": "odoodata"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE upload_silverfish \nSET \"Stock Count\" = 1 \nWHERE\n\"Stock Count\"::NUMERIC > 0;\n  ",
        "options": {}
      },
      "id": "2b01ad5b-2ef1-478b-b9a4-81168ca3720d",
      "name": "Postgres3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        1100,
        820
      ],
      "credentials": {
        "postgres": {
          "id": "9Jz67Tm0faeykq6p",
          "name": "odoodata"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE upload_silverfish \nSET \"Stock Count\" = 0 \nWHERE\n\"Stock Count\"::NUMERIC < 0;\n  ",
        "options": {}
      },
      "id": "73ec8bd7-fe93-45ae-929a-a8be0b083020",
      "name": "Postgres4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        1320,
        820
      ],
      "credentials": {
        "postgres": {
          "id": "9Jz67Tm0faeykq6p",
          "name": "odoodata"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM upload_silverfish WHERE \"Unit Cost\" = 'N/A';",
        "options": {}
      },
      "id": "f5cbe7a4-4170-4c06-bd3f-f383d884862a",
      "name": "Postgres5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        880,
        1020
      ],
      "credentials": {
        "postgres": {
          "id": "9Jz67Tm0faeykq6p",
          "name": "odoodata"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM upload_silverfish WHERE \"Unit MSRP\" = 'N/A';",
        "options": {}
      },
      "id": "1f328ffa-3d0b-4c05-b3f7-ad1dfb2407ea",
      "name": "Postgres6",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        1100,
        1020
      ],
      "credentials": {
        "postgres": {
          "id": "9Jz67Tm0faeykq6p",
          "name": "odoodata"
        }
      }
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "alterStatements",
              "value": "RENAME COLUMN \"Vendor SKU\" TO \"ProductCode\", ALTER COLUMN \"ProductCode\" TYPE CHAR(40), RENAME COLUMN \"Product Name\" TO \"ProductName\", ALTER COLUMN \"ProductName\" TYPE CHAR(235), RENAME COLUMN \"UPC/EAN\" TO \"Ean\", ALTER COLUMN \"Ean\" TYPE CHAR(22), RENAME COLUMN \"Unit MSRP\" TO \"Rrp\", ALTER COLUMN \"Rrp\" TYPE DECIMAL(7,2) USING \"Rrp\"::NUMERIC, RENAME COLUMN \"Pack Qty\" TO \"PackQty\", ALTER COLUMN \"PackQty\" TYPE CHAR(27), RENAME COLUMN \"Variant Grouping\" TO \"VariantGrouping\", ALTER COLUMN \"VariantGrouping\" TYPE CHAR(30), RENAME COLUMN \"Short Description\" TO \"ShortDescription\", ALTER COLUMN \"ShortDescription\" TYPE CHAR(222), RENAME COLUMN \"Long Description\" TO \"LongDescription\", ALTER COLUMN \"LongDescription\" TYPE TEXT, RENAME COLUMN \"Unit Cost\" TO \"YourPrice\", ALTER COLUMN \"YourPrice\" TYPE DECIMAL(7,2) USING \"YourPrice\"::NUMERIC, RENAME COLUMN \"Lead Time\" TO \"LeadTime\", ALTER COLUMN \"LeadTime\" TYPE SMALLINT USING \"LeadTime\"::NUMERIC, RENAME COLUMN \"Sub Category\" TO \"SubCategory\", ALTER COLUMN \"SubCategory\" TYPE CHAR(30), RENAME COLUMN \"image\" TO \"ImageUrl\", ALTER COLUMN \"ImageUrl\" TYPE CHAR(102), RENAME COLUMN \"Alternative Image 1\" TO \"AlternativeImage1Url\", ALTER COLUMN \"AlternativeImage1Url\" TYPE CHAR(102), RENAME COLUMN \"Alternative Image 2\" TO \"AlternativeImage2Url\", ALTER COLUMN \"AlternativeImage2Url\" TYPE CHAR(102), RENAME COLUMN \"Alternative Image 3\" TO \"AlternativeImage3Url\", ALTER COLUMN \"AlternativeImage3Url\" TYPE CHAR(102), RENAME COLUMN \"Stock Count\" TO \"StockCount\", ALTER COLUMN \"StockCount\" TYPE SMALLINT USING \"StockCount\"::NUMERIC, RENAME COLUMN \"Technical Spec\" TO \"TechnicalSpec\", ALTER COLUMN \"TechnicalSpec\" TYPE TEXT, ADD COLUMN \"TechnicalSpecLabel\" TEXT DEFAULT NULL, ALTER COLUMN \"vat\" TYPE SMALLINT USING \"vat\"::NUMERIC"
            },
            {
              "name": "supplier",
              "value": "Silverfish"
            }
          ]
        },
        "options": {}
      },
      "id": "c532ca21-baa9-4274-9bf6-b42f50565b0a",
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        880,
        1220
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM upload_silverfish WHERE \"Unit MSRP\" = '#N/A';",
        "options": {}
      },
      "id": "14a4a0fd-dac0-4867-a536-9d334c63c9ee",
      "name": "Postgres9",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        1320,
        1020
      ],
      "credentials": {
        "postgres": {
          "id": "9Jz67Tm0faeykq6p",
          "name": "odoodata"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM upload_silverfish WHERE \"Unit Cost\" = '#N/A';",
        "options": {}
      },
      "id": "bf6b439d-ec8e-4b83-b95f-683082b95b60",
      "name": "Postgres10",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        1500,
        1020
      ],
      "credentials": {
        "postgres": {
          "id": "9Jz67Tm0faeykq6p",
          "name": "odoodata"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "2mliuDMlTssD3kUq"
      },
      "id": "4002bd3c-9bee-480a-ad52-b3de6c0ae2c6",
      "name": "Data Update: Process Alter Statements",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        1100,
        1220
      ]
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.stderr }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "1713c1e8-45b7-45ee-87b6-8f0c904a7e33",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1700,
        420
      ]
    },
    {
      "parameters": {
        "fromEmail": "info@biketrax.co.uk",
        "toEmail": "Shigeyoshi.Kunimaru@silverfish-uk.com",
        "subject": "Madison Feed Error",
        "text": "=Line(s) from the latest Silverfish data feed have failed to parse. This is usually because of a break in CSV specifications or incorrect placement of standard delimiters (,) / enclosing marks (\")  in your feed CSV.\n\nHere is an example product code with faulty data, and the error it caused:\n\nProduct Code: {{ $('Code').first().json.failed_code }}\n{{ $('Code').first().json.stderr }}\n\nA full list of errors is attached as a XLS file. If you could correct the errors for future exports, then then the item(s) can be added to our database on the next run.\n\nMany thanks,\n\nBiketraxBot (Product Information Database)",
        "options": {
          "attachments": "data",
          "ccEmail": "luke@biketrax.co.uk",
          "replyTo": "luke@biketrax.co.uk"
        }
      },
      "id": "142c0ecf-c15c-4ffc-ac19-ce0699ff8d25",
      "name": "Send Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        3620,
        500
      ],
      "executeOnce": true,
      "credentials": {
        "smtp": {
          "id": "enV6OrvNpARXtf1c",
          "name": "btxBot"
        }
      }
    },
    {
      "parameters": {
        "command": "={{\"sed '\"+$json.stdout+\"d'\"}} /home/luke/feeds/Upload-Silverfish{{ $runIndex == 0 ? \"\" : $runIndex }}.csv > /home/luke/feeds/Upload-Silverfish{{ $runIndex+1 }}.csv"
      },
      "id": "b1667823-0327-49e3-ba8f-a6fc1fb66b1a",
      "name": "SSH3",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        2160,
        500
      ],
      "credentials": {
        "sshPassword": {
          "id": "jW26ND48jT87UhK8",
          "name": "Node3: Root"
        }
      }
    },
    {
      "parameters": {
        "command": "=psql -d odooData -c \"\\\\COPY odoodata.upload_madison FROM /home/luke/feeds/Upload-Silverfish{{ $runIndex+1 }}.csv DELIMITER ',' CSV HEADER;\"",
        "cwd": "/home/luke/feeds/"
      },
      "id": "5fb0b06b-ef8e-4db0-8e42-0bd72829de70",
      "name": "SSH4",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        2360,
        500
      ],
      "credentials": {
        "sshPassword": {
          "id": "XjhjaSmzbkvtSZ0m",
          "name": "Node3: postgres"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.stderr }}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "75d7e46c-b2b1-4aab-b842-d82f81c42029",
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        2740,
        500
      ]
    },
    {
      "parameters": {
        "jsCode": "let results = [],\n  i = 0;\n\ndo {\n  try {\n    results = results.concat($(\"Set1\").all(0, i));\n  } catch (error) {\n        results = results.concat($(\"firstFail\").all()); \n    return results;\n  }\n  i++;\n} while (true);\n"
      },
      "id": "95997d33-b45d-45af-a64a-b2f5f94047b8",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        2940,
        500
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "toFile",
        "options": {
          "fileName": "parsing_errors.xls",
          "headerRow": true
        }
      },
      "id": "7e28212d-3926-4ebb-8494-00950689ad2f",
      "name": "Spreadsheet File",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 1,
      "position": [
        3440,
        500
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.failed_code }}",
              "operation": "isEmpty"
            }
          ]
        }
      },
      "id": "f8f3c4be-082e-4732-bf18-72d86a8028f5",
      "name": "IF2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        3160,
        500
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "failed_code",
              "value": "={{$json.stderr.split(\"\\\"\")[2]}}"
            },
            {
              "name": "stderr",
              "value": "={{ $json.stderr }}"
            }
          ]
        },
        "options": {}
      },
      "id": "625a68dd-c644-426e-8c8f-48d5b0278189",
      "name": "firstFail",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1480,
        420
      ]
    },
    {
      "parameters": {
        "command": "=grep -n {{ \"\\\"\"+$json.stderr.split(\"\\\"\")[2]+\"\\\"\" }}  /home/luke/feeds/Upload-Silverfish{{ $runIndex == 0 ? \"\" : $runIndex }}.csv | cut -f1 -d:"
      },
      "id": "3ea3aa08-ecea-411e-b35e-2ec55eeb1981",
      "name": "SSH",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        1900,
        300
      ],
      "credentials": {
        "sshPassword": {
          "id": "jW26ND48jT87UhK8",
          "name": "Node3: Root"
        }
      }
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "failed_code",
              "value": "={{$json.stderr.split(\"\\\"\")[2]}}"
            },
            {
              "name": "stderr",
              "value": "={{ $json.stderr }}"
            }
          ]
        },
        "options": {}
      },
      "id": "e00d6cf1-2df3-46a3-a0b0-78d80c2ed301",
      "name": "Set1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        2560,
        500
      ]
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "id": "NgXcDDqIPq9W8PqT",
      "createdAt": "2023-07-30T10:50:20.897Z",
      "updatedAt": "2023-07-30T10:50:20.897Z",
      "name": "Postgresql"
    },
    {
      "id": "Q6hSRhURJvwaJyXs",
      "createdAt": "2023-07-30T10:52:22.581Z",
      "updatedAt": "2023-07-30T10:52:22.581Z",
      "name": "SSH"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2023-07-31T13:48:16.000Z",
  "versionId": "f40ccdc8-b913-40e7-bb54-a9826aa688e9"
}